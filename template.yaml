AWSTemplateFormatVersion: "2010-09-09"
Description: S3 + Lambda con trigger al subir objetos

Parameters:
  ExistingRoleArn:
    Type: String
    Description: ARN of exsiting role LabRole
  CodeBucketName:
    Type: String
    Description: Bucket name of S3 bucket with .zip lambda code
  DestinationBucketName:
    Type: String
    Description: Bucket name of S3 bucket where lambda result is uploaded
  TriggerBucketName:
    Type: String
    Description: Bucket name of S3 bucket that triggers student function.
  StudentFunctionName:
    Type: String
    Description: Student function name.

Resources:
  RawStudentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref TriggerBucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt StudentFunction.Arn
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  DestinationStudentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DestinationBucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  StudentFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref StudentFunctionName
      Runtime: python3.13
      Handler: lambdaCode/lambda_function.lambda_handler
      Role: !Ref ExistingRoleArn
      Timeout: 30
      Code:
        S3Bucket: !Ref CodeBucketName
        S3Key: lambdaCode.zip
      Environment:
        Variables:
          RESULT_BUCKET_NAME: !Ref DestinationBucketName
      Layers:
        - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python313:4

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt StudentFunction.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub "arn:${AWS::Partition}:s3:::${TriggerBucketName}"

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${StudentFunction}"
      RetentionInDays: 1
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

Outputs:
  RawStudentBucketNameOut:
    Value: !Ref RawStudentBucket
    Description: Nombre del bucket S3
  DestinationStudentBucketNameOut:
    Value: !Ref DestinationStudentBucket
    Description: Nombre del bucket S3
  StudentFunctionNameOut:
    Value: !Ref StudentFunction
    Description: Nombre de la funci√≥n Lambda
